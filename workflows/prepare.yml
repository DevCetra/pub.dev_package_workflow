##.title
## ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
##
## Dart/Flutter (DF) Packages by DevCetra.com & contributors. The use of this
## source code is governed by an MIT-style license described in the LICENSE
## file located in this project's root directory.
##
## See: https://opensource.org/license/mit
##
## ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
##.title~

name: Prepare version

## -----------------------------------------------------------------------------

on:
  push:
    branches:
      - main

## -----------------------------------------------------------------------------

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get commit messages
        id: get_commits
        run: |
          COMMIT_MESSAGES=$(git log --format=%B -n 1 HEAD)
          echo "::set-output name=messages::${COMMIT_MESSAGES}"

      # Proceed if the commit message starts with '+'
      - name: Check commit message
        id: check_message
        run: |
          if [[ "${{ steps.get_commits.outputs.messages }}" == +* ]]; then
            echo "::set-output name=proceed::true"
          else
            echo "::set-output name=proceed::false"
          fi

      - name: Set up Dart
        if: steps.check_message.outputs.proceed == 'true'
        uses: dart-lang/setup-dart@v1.2

      - name: Format Dart code
        if: steps.check_message.outputs.proceed == 'true'
        run: dart format .

      - name: Apply Dart fixes
        if: steps.check_message.outputs.proceed == 'true'
        run: dart fix --apply

      - name: Extract version from pubspec.yaml
        if: steps.check_message.outputs.proceed == 'true'
        id: get_version
        run: |
          VERSION=$(grep "version:" pubspec.yaml | sed 's/version: //')
          echo "Extracted version: $VERSION"
          echo "::set-output name=extracted_version::$VERSION"

      - name: Commit and push changes
        if: steps.check_message.outputs.proceed == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Prepare version ${{ steps.get_version.outputs.extracted_version }}"
          git push
